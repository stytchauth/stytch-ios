@Tutorial(time: 5) {
    @Intro(title: "Manage Sessions manually") {
        If the out-of-the-box sessions product doesn't work for your needs, there are options available for manual intervention and manipulation.
    }
    
    @Section(title: "Update Session tokens via cookies") {
        @ContentAndMedia {
            If your app manages some of its interaction with Stytch via your backend, you may need to update your session token manually. This can be handled via cookies if that works best for your workflow.
        }
        
        @Steps {
            @Step {
                Create a request to your backend which will provide any relevant session updates.
                
                @Code(name: AuthenticationClient.swift, file: 01-manage-sessions-manually-01.swift)
            }

            @Step {
                Ensure this request fires as makes sense for your application.
                
                @Code(name: AuthenticationClient.swift, file: 01-manage-sessions-manually-02.swift)
            }

            @Step {
                Import StytchCore.
                
                @Code(name: AuthenticationClient.swift, file: 01-manage-sessions-manually-03.swift)
            }

            @Step {
                Perform a session authenticate call to begin JWT polling if the session was updated.
                
                @Code(name: AuthenticationClient.swift, file: 01-manage-sessions-manually-04.swift)
            }

            @Step {
                Ensure your backend modifies the response to your client with a `Set-Cookie` header and the session tokens. The <StytchClient> will automatically listen for updates to these cookies and update the local state accordingly.
                
                @Code(name: authentication_controller.rb, file: 01-manage-sessions-manually-04.rb)
            }
        }
    }
    
    @Section(title: "Update Session tokens using update(sessionTokens:)") {
        @ContentAndMedia {
            If your app has cookies disabled, or if you otherwise prefer, you can also receive updated session tokens in network responses from your backend and update the token programmatically.
        }
        
        @Steps {
            @Step {
                Open your backend authentication code from `Section 1`.
                
                @Code(name: authentication_controller.rb, file: 02-manage-sessions-manually-01.rb)
            }

            @Step {
                Edit the code to return session tokens as part of the response body instead of utilizing cookies.
                
                @Code(name: authentication_controller.rb, file: 02-manage-sessions-manually-02.rb)
            }

            @Step {
                Open your AuthenticationClient code from `Section 1`.
                
                @Code(name: AuthenticationClient.swift, file: 02-manage-sessions-manually-03.swift)
            }

            @Step {
                Modify the client code to pull the tokens from the response, and update the <doc:StytchClient> manually using the <doc:Sessions/update(sessionTokens:)> method.

                @Code(name: AuthenticationClient.swift, file: 02-manage-sessions-manually-04.swift)
            }
        }
    }
}
