{"metadata":{"roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canHandle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"url","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","extendedModule":"StytchCore","title":"canHandle(url:)","symbolKind":"method","externalID":"s:10StytchCore0A6ClientV9canHandle3urlSb10Foundation3URLV_tFZ","modules":[{"name":"StytchCore"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/canHandle(url:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canHandle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"url","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"platforms":["iOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore","doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/stytchcore\/stytchclient\/canhandle(url:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A helper function for determining whether the deeplink is intended for Stytch. Useful in contexts where your application makes use of a deeplink coordinator\/manager which requires a synchronous determination of whether a given handler can handle a given URL. Equivalent to checking for a nil return value from ","type":"text"},{"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/tokenValues(for:)","isActive":true,"type":"reference"}],"sections":[],"references":{"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient":{"navigatorTitle":[{"text":"StytchClient","kind":"identifier"}],"title":"StytchClient","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StytchClient","kind":"identifier"}],"abstract":[{"type":"text","text":"The entrypoint for all Stytch-related interaction."}],"kind":"symbol","url":"\/documentation\/stytchcore\/stytchclient","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient","type":"topic"},"doc://stytch-ios.StytchCore/documentation/StytchCore":{"url":"\/documentation\/stytchcore","title":"StytchCore","abstract":[{"text":"Provides native iOS access to the Stytch SDK methods for ultimate flexibility.","type":"text"}],"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore","type":"topic","role":"collection","kind":"symbol"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient/tokenValues(for:)":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tokenValues","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"preciseIdentifier":"s:10StytchCore0A6ClientV17DeeplinkTokenTypeO","text":"DeeplinkTokenType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:10StytchCore0A6ClientV20DeeplinkRedirectTypeO","text":"DeeplinkRedirectType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/tokenValues(for:)","url":"\/documentation\/stytchcore\/stytchclient\/tokenvalues(for:)","abstract":[{"type":"text","text":"A helper function for parsing out the Stytch token types and values from a given deeplink"}],"type":"topic","title":"tokenValues(for:)","role":"symbol"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient/canHandle(url:)":{"abstract":[{"text":"A helper function for determining whether the deeplink is intended for Stytch. Useful in contexts where your application makes use of a deeplink coordinator\/manager which requires a synchronous determination of whether a given handler can handle a given URL. Equivalent to checking for a nil return value from ","type":"text"},{"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/tokenValues(for:)","isActive":true,"type":"reference"}],"title":"canHandle(url:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canHandle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"url","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/canHandle(url:)","url":"\/documentation\/stytchcore\/stytchclient\/canhandle(url:)","role":"symbol","type":"topic"}}}