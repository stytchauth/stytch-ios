{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore","doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient","doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/Sessions-swift.struct"]]},"metadata":{"roleHeading":"Instance Method","title":"update(sessionTokens:)","externalID":"s:10StytchCore0A6ClientV8SessionsV6update13sessionTokensyAA07SessionG0V_tF","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sessionTokens","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10StytchCore13SessionTokensV","text":"SessionTokens","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method","modules":[{"name":"StytchCore"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sessionTokens","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10StytchCore13SessionTokensV","text":"SessionTokens","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/SessionTokens","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}]}],"abstract":[{"text":"If your app has cookies disabled or simply receives updated session tokens from your backend via means other than","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Set-Cookie"},{"text":" headers, you must call this method after receiving the updated tokens to ensure the ","type":"text"},{"type":"codeVoice","code":"StytchClient"},{"text":" ","type":"text"},{"text":"and persistent storage are kept up-to-date. You are required to include both the opaque token and the jwt.","type":"text"}],"variants":[{"paths":["\/documentation\/stytchcore\/stytchclient\/sessions-swift.struct\/update(sessiontokens:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/Sessions-swift.struct\/update(sessionTokens:)"},"references":{"doc://stytch-ios.StytchCore/documentation/StytchCore/SessionTokens":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SessionTokens"}],"type":"topic","abstract":[{"text":"A public interface to require the caller to explicitly pass one of each type of non nil token in order to update a session.","type":"text"}],"url":"\/documentation\/stytchcore\/sessiontokens","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SessionTokens"}],"title":"SessionTokens","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/SessionTokens"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient":{"type":"topic","url":"\/documentation\/stytchcore\/stytchclient","abstract":[{"type":"text","text":"The entrypoint for all Stytch-related interaction."}],"kind":"symbol","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient","title":"StytchClient","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StytchClient","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"StytchClient","kind":"identifier"}]},"doc://stytch-ios.StytchCore/documentation/StytchCore":{"kind":"symbol","type":"topic","abstract":[{"text":"Provides native iOS access to the Stytch SDK methods for ultimate flexibility.","type":"text"}],"role":"collection","url":"\/documentation\/stytchcore","title":"StytchCore","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient/Sessions-swift.struct/update(sessionTokens:)":{"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/Sessions-swift.struct\/update(sessionTokens:)","abstract":[{"type":"text","text":"If your app has cookies disabled or simply receives updated session tokens from your backend via means other than"},{"type":"text","text":" "},{"code":"Set-Cookie","type":"codeVoice"},{"type":"text","text":" headers, you must call this method after receiving the updated tokens to ensure the "},{"code":"StytchClient","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and persistent storage are kept up-to-date. You are required to include both the opaque token and the jwt."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sessionTokens","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SessionTokens","preciseIdentifier":"s:10StytchCore13SessionTokensV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/stytchcore\/stytchclient\/sessions-swift.struct\/update(sessiontokens:)","title":"update(sessionTokens:)"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient/Sessions-swift.struct":{"type":"topic","navigatorTitle":[{"text":"Sessions","kind":"identifier"}],"title":"StytchClient.Sessions","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/Sessions-swift.struct","url":"\/documentation\/stytchcore\/stytchclient\/sessions-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sessions","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"The SDK may be used to check whether a user has a cached session, view the current session, refresh the session, and revoke the session. To authenticate a session on your backend, you must use either the Stytch API or a Stytch server-side library. ","type":"text"},{"inlineContent":[{"text":"NOTE","type":"text"}],"type":"strong"},{"text":": - After a successful authentication, the session will be automatically refreshed in the background to ensure the sessionJwt remains valid (it expires after 5 minutes.) Session polling will be stopped after a session is revoked or after an unauthenticated error response is received.","type":"text"}],"role":"symbol"}}}