{"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/stytchcore\/stytchclient\/cryptowallets-swift.struct\/wallettype\/init(from:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/CryptoWallets-swift.struct\/WalletType\/init(from:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"title":"init(from:)","modules":[{"name":"StytchCore","relatedModules":["Swift"]}],"symbolKind":"init","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},"role":"symbol","extendedModule":"Swift","externalID":"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:10StytchCore0A6ClientV13CryptoWalletsV10WalletTypeO","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"roleHeading":"Initializer"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"RawRepresentable.init(from:)","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore","doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient","doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/CryptoWallets-swift.struct","doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/CryptoWallets-swift.struct\/WalletType","doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/CryptoWallets-swift.struct\/WalletType\/RawRepresentable-Implementations"]]},"sections":[],"references":{"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient/CryptoWallets-swift.struct/WalletType":{"url":"\/documentation\/stytchcore\/stytchclient\/cryptowallets-swift.struct\/wallettype","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WalletType"}],"role":"symbol","abstract":[{"type":"text","text":"The type of crypto wallet. Currently "},{"code":"ethereum","type":"codeVoice"},{"type":"text","text":" and "},{"code":"solana","type":"codeVoice"},{"type":"text","text":" are supported. Wallets for any EVM-compatible chains (such as Polygon or BSC) are also supported and are grouped under the "},{"code":"ethereum","type":"codeVoice"},{"type":"text","text":" type."}],"title":"StytchClient.CryptoWallets.WalletType","navigatorTitle":[{"kind":"identifier","text":"WalletType"}],"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/CryptoWallets-swift.struct\/WalletType"},"doc://stytch-ios.StytchCore/documentation/StytchCore":{"type":"topic","url":"\/documentation\/stytchcore","abstract":[{"type":"text","text":"Provides native iOS access to the Stytch SDK methods for ultimate flexibility."}],"kind":"symbol","title":"StytchCore","role":"collection","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient/CryptoWallets-swift.struct/WalletType/RawRepresentable-Implementations":{"title":"RawRepresentable Implementations","abstract":[],"type":"topic","url":"\/documentation\/stytchcore\/stytchclient\/cryptowallets-swift.struct\/wallettype\/rawrepresentable-implementations","role":"collectionGroup","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/CryptoWallets-swift.struct\/WalletType\/RawRepresentable-Implementations","kind":"article"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient":{"navigatorTitle":[{"kind":"identifier","text":"StytchClient"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StytchClient"}],"abstract":[{"text":"The entrypoint for all Stytch-related interaction.","type":"text"}],"type":"topic","role":"symbol","title":"StytchClient","kind":"symbol","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient","url":"\/documentation\/stytchcore\/stytchclient"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient/CryptoWallets-swift.struct":{"navigatorTitle":[{"text":"CryptoWallets","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CryptoWallets","kind":"identifier"}],"url":"\/documentation\/stytchcore\/stytchclient\/cryptowallets-swift.struct","role":"symbol","title":"StytchClient.CryptoWallets","abstract":[{"text":"The SDK provides methods that can be used to authenticate a user via their crypto wallet.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/CryptoWallets-swift.struct"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient/CryptoWallets-swift.struct/WalletType/init(from:)":{"abstract":[],"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/CryptoWallets-swift.struct\/WalletType\/init(from:)","title":"init(from:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/stytchcore\/stytchclient\/cryptowallets-swift.struct\/wallettype\/init(from:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" is "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}}}