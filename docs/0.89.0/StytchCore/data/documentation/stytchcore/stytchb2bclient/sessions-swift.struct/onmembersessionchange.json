{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"A publisher that emits changes to the current "},{"type":"codeVoice","code":"MemberSession"},{"type":"text","text":"."}],"kind":"symbol","variants":[{"paths":["\/documentation\/stytchcore\/stytchb2bclient\/sessions-swift.struct\/onmembersessionchange"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore","doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchB2BClient","doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchB2BClient\/Sessions-swift.struct"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"onMemberSessionChange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Combine12AnyPublisherV","kind":"typeIdentifier","text":"AnyPublisher"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10StytchCore0A10ObjectInfoO","kind":"typeIdentifier","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchObjectInfo","text":"StytchObjectInfo"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10StytchCore13MemberSessionV","kind":"typeIdentifier","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/MemberSession","text":"MemberSession"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s5NeverO","kind":"typeIdentifier","text":"Never"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Publishes ","type":"text"},{"type":"codeVoice","code":".available(MemberSession, Date)"},{"text":" when a valid session is present, along with the last validation timestamp.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Publishes ","type":"text"},{"type":"codeVoice","code":".unavailable(EncryptedUserDefaultsError?)"},{"text":" when no valid session exists.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This allows subscribers to react to session availability without handling "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" "},{"code":"MemberSession","type":"codeVoice"},{"type":"text","text":" values directly."}]}]}],"identifier":{"url":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchB2BClient\/Sessions-swift.struct\/onMemberSessionChange","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"onMemberSessionChange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10StytchCore0A10ObjectInfoO","text":"StytchObjectInfo"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10StytchCore13MemberSessionV","text":"MemberSession"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"kind":"text","text":">"}],"externalID":"s:10StytchCore0A9B2BClientV8SessionsV21onMemberSessionChange7Combine12AnyPublisherVyAA0A10ObjectInfoOyAA0gH0VGs5NeverOGvp","role":"symbol","modules":[{"name":"StytchCore"}],"title":"onMemberSessionChange","roleHeading":"Instance Property","symbolKind":"property"},"references":{"doc://stytch-ios.StytchCore/documentation/StytchCore/MemberSession":{"title":"MemberSession","role":"symbol","navigatorTitle":[{"text":"MemberSession","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemberSession","kind":"identifier"}],"url":"\/documentation\/stytchcore\/membersession","type":"topic","abstract":[{"type":"text","text":"A type defining a memberâ€™s session; including information about its validity, expiry, factors associated with this session, and more."}],"kind":"symbol","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/MemberSession"},"doc://stytch-ios.StytchCore/documentation/StytchCore":{"title":"StytchCore","role":"collection","abstract":[{"text":"Provides native iOS access to the Stytch SDK methods for ultimate flexibility.","type":"text"}],"url":"\/documentation\/stytchcore","kind":"symbol","type":"topic","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchObjectInfo":{"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchObjectInfo","navigatorTitle":[{"text":"StytchObjectInfo","kind":"identifier"}],"abstract":[{"text":"StytchObjectInfo provides a generic way to unify the publishing of Stytch object types.","type":"text"},{"text":" ","type":"text"},{"text":"If there is an object to publish you will get ","type":"text"},{"type":"codeVoice","code":"case available(T, Date)"},{"text":", which will publish the object","type":"text"},{"text":" ","type":"text"},{"text":"and the date is was last validated at. The receiver of the event if the object is within their time tolerance for use.","type":"text"},{"text":" ","type":"text"},{"text":"If there is no object to publish you will get ","type":"text"},{"type":"codeVoice","code":"case unavailable(EncryptedUserDefaultsError?)"},{"text":". So the publisher will never have to publish a nil value.","type":"text"}],"url":"\/documentation\/stytchcore\/stytchobjectinfo","type":"topic","title":"StytchObjectInfo","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StytchObjectInfo","kind":"identifier"}],"kind":"symbol"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchB2BClient/Sessions-swift.struct/onMemberSessionChange":{"abstract":[{"type":"text","text":"A publisher that emits changes to the current "},{"code":"MemberSession","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"onMemberSessionChange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Combine12AnyPublisherV","kind":"typeIdentifier","text":"AnyPublisher"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10StytchCore0A10ObjectInfoO","kind":"typeIdentifier","text":"StytchObjectInfo"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10StytchCore13MemberSessionV","kind":"typeIdentifier","text":"MemberSession"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s5NeverO","kind":"typeIdentifier","text":"Never"},{"kind":"text","text":">"}],"url":"\/documentation\/stytchcore\/stytchb2bclient\/sessions-swift.struct\/onmembersessionchange","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchB2BClient\/Sessions-swift.struct\/onMemberSessionChange","type":"topic","title":"onMemberSessionChange","kind":"symbol","role":"symbol"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchB2BClient":{"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchB2BClient","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StytchB2BClient","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/stytchcore\/stytchb2bclient","navigatorTitle":[{"text":"StytchB2BClient","kind":"identifier"}],"abstract":[{"text":"The entrypoint for all Stytch B2B-related interaction.","type":"text"}],"type":"topic","title":"StytchB2BClient"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchB2BClient/Sessions-swift.struct":{"title":"StytchB2BClient.Sessions","role":"symbol","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchB2BClient\/Sessions-swift.struct","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sessions","kind":"identifier"}],"abstract":[{"type":"text","text":"The SDK may be used to check whether a user has a cached session, view the current session, refresh the session, and revoke the session. To authenticate a session on your backend, you must use either the Stytch API or a Stytch server-side library. "},{"type":"strong","inlineContent":[{"text":"NOTE","type":"text"}]},{"type":"text","text":": - After a successful authentication, the session will be automatically refreshed in the background to ensure the sessionJwt remains valid (it expires after 5 minutes.) Session polling will be stopped after a session is revoked or after an unauthenticated error response is received."}],"navigatorTitle":[{"text":"Sessions","kind":"identifier"}],"url":"\/documentation\/stytchcore\/stytchb2bclient\/sessions-swift.struct","kind":"symbol"}}}