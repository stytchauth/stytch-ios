{"sections":[{"kind":"hero","chapter":"Getting started","estimatedTimeInMinutes":10,"title":"Add Email Magic Links","content":[{"inlineContent":[{"text":"Email Magic Links are a great, user-friendly way to get started using Stytch!","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Email Magic Links require redirection from an outside email client back into your app. As a prerequisite to this tutorial, you’ll need to set up redirect urls in the "},{"type":"reference","identifier":"https:\/\/stytch.com\/dashboard\/redirect-urls","isActive":true},{"type":"text","text":" and ensure "},{"type":"reference","identifier":"https:\/\/github.com\/stytchauth\/stytch-ios#associated-domains","isActive":true},{"type":"text","text":" are configured on your website and in your app’s entitlements."}]}],"type":"paragraph"}]},{"kind":"tasks","tasks":[{"title":"Set up deeplink handling","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"text":"In this section, you’ll configure your app to handle incoming deeplinks.","type":"text"}],"type":"paragraph"}]}],"anchor":"Set-up-deeplink-handling","stepsSection":[{"type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Open your "},{"code":"AppDelegate.swift","type":"codeVoice"},{"type":"text","text":" file from the previous chapter’s tutorial."}],"type":"paragraph"}],"caption":[],"code":"01-add-eml-01.swift","runtimePreview":null},{"type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Add a Deeplink coordinator to handle deeplinks."}],"type":"paragraph"}],"caption":[],"code":"01-add-eml-02.swift","runtimePreview":null},{"type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Add handling code to deeplink methods."}],"type":"paragraph"}],"caption":[],"code":"01-add-eml-03.swift","runtimePreview":null},{"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a handler for Stytch deeplinks inside of which you’ll utilize the StytchClient’s "},{"type":"reference","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore#StytchClient","isActive":true},{"type":"text","text":" method."}]}],"caption":[],"code":"01-add-eml-04.swift","runtimePreview":null},{"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Wire up Stytch handler to deeplink coordinator.","type":"text"}]}],"caption":[],"code":"01-add-eml-05.swift","runtimePreview":null}]},{"title":"Send an EML","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"In this section you’ll initiate the sending of an Email Magic Link so a user can login or sign up.","type":"text"}]}]}],"anchor":"Send-an-EML","stepsSection":[{"code":"02-add-eml-01.swift","runtimePreview":null,"media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the file where you manage you authentication user flows."}]}],"caption":[]},{"code":"02-add-eml-02.swift","runtimePreview":null,"media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import "},{"isActive":true,"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore","type":"reference"},{"type":"text","text":"."}]}],"caption":[]},{"code":"02-add-eml-03.swift","runtimePreview":null,"media":null,"type":"step","content":[{"inlineContent":[{"text":"Add method to send Email Magic Link to initiate authentication.","type":"text"}],"type":"paragraph"}],"caption":[]},{"code":"02-add-eml-04.swift","runtimePreview":null,"media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/MagicLinks-swift.struct\/Email-swift.struct\/loginOrCreate(parameters:)-9n8i5","isActive":true},{"type":"text","text":" to send the magic link."}]}],"caption":[]},{"code":"02-add-eml-05.swift","runtimePreview":null,"media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Alert the user to check their email. And that’s it, you’re done!"}]}],"caption":[]}]}]},{"kind":"callToAction","abstract":[{"type":"text","text":"Biometrics is one of the most efficient forms of authentication on mobile devices. Learn how to add it to your app here!"}],"featuredEyebrow":"Tutorial","title":"Add Biometrics","action":{"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-biometrics","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference","isActive":true,"overridingTitle":"Get started"}}],"metadata":{"categoryPathComponent":"stytch","category":"Stytch","role":"project","title":"Add Email Magic Links"},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-eml"},"variants":[{"paths":["\/tutorials\/stytchcore\/add-eml"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"project","hierarchy":{"paths":[["doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch","doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch\/Stytch-Basics","doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch\/Stytch-Basics\/Getting-started"]],"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch","modules":[{"projects":[{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/initial-setup","sections":[{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/initial-setup#Add-Stytch-to-your-project"},{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/initial-setup#Configure-the-StytchClient"}]},{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-eml","sections":[{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-eml#Set-up-deeplink-handling"},{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-eml#Send-an-EML"}]}],"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch\/Stytch-Basics\/Getting-started"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-biometrics#Register-and-authenticate-with-Biometrics"}],"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-biometrics"},{"sections":[{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-oauth#Add-Sign-In-With-Apple"},{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-oauth#Add-Third-Party-Identity-Providers"}],"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-oauth"}],"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch\/Stytch-Basics\/Using-more-auth-methods"},{"projects":[{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/send-tokens-in-auth-header","sections":[{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/send-tokens-in-auth-header#Set-up-a-Request-Interceptor","kind":"task"}]},{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-the-current-user","sections":[{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-the-current-user#Get-current-user"},{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-the-current-user#Delete-auth-factors"},{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-the-current-user#Attach-new-factor-to-existing-user"}]},{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/step-up-auth-mfa","sections":[{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/step-up-auth-mfa#Utilizing-a-just-in-time-second-factor","kind":"task"},{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/step-up-auth-mfa#Confirm-the-one-time-code","kind":"task"}]}],"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch\/Intermediate-Stytch-Usage\/Going-deeper"},{"projects":[{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-sessions-manually","sections":[{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-sessions-manually#Update-Session-tokens-via-cookies"},{"kind":"task","reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-sessions-manually#Update-Session-tokens-using-updatesessionTokens"}]},{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/rebuild-ui-on-auth-change","sections":[{"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/rebuild-ui-on-auth-change#Dynamically-rebuild-your-UI","kind":"task"}]}],"reference":"doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch\/Advanced-Stytch\/Pushing-the-limits"}]},"references":{"02-add-eml-04.swift":{"syntax":"swift","content":["import StytchCore","import UIKit","","final class AuthenticationViewController: UIViewController {","    private func sendMagicLink(to email: String) {","        Task {","            do {","                _ = try await StytchClient.magicLinks.email.loginOrCreate(parameters: .init(email: email))","            } catch {}","        }","    }","}"],"fileType":"swift","type":"file","fileName":"AuthenticationViewController.swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10}],"identifier":"02-add-eml-04.swift"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/manage-the-current-user#Get-current-user":{"url":"\/tutorials\/stytchcore\/manage-the-current-user#Get-current-user","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-the-current-user#Get-current-user","title":"Get current user","type":"section","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial will teach you a few of the things you can do to manage Stytch users."}]},"https://github.com/stytchauth/stytch-ios#associated-domains":{"url":"https:\/\/github.com\/stytchauth\/stytch-ios#associated-domains","titleInlineContent":[{"type":"text","text":"Universal Links"}],"type":"link","title":"Universal Links","identifier":"https:\/\/github.com\/stytchauth\/stytch-ios#associated-domains"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/manage-the-current-user":{"type":"topic","role":"project","kind":"project","url":"\/tutorials\/stytchcore\/manage-the-current-user","title":"Manage the current user","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-the-current-user","estimatedTime":"10min","abstract":[{"text":"This tutorial will teach you a few of the things you can do to manage Stytch users.","type":"text"}]},"doc://stytch-ios.StytchCore/documentation/StytchCore#StytchClient":{"url":"\/documentation\/stytchcore#StytchClient","abstract":[],"kind":"section","type":"topic","title":"StytchClient","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore#StytchClient"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/add-biometrics":{"type":"topic","role":"project","kind":"project","url":"\/tutorials\/stytchcore\/add-biometrics","title":"Add Biometrics","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-biometrics","estimatedTime":"5min","abstract":[{"text":"Biometrics is one of the most efficient forms of authentication on mobile devices. Learn how to add it to your app here!","type":"text"}]},"01-add-eml-03.swift":{"fileName":"AppDelegate.swift","highlights":[{"line":22},{"line":23},{"line":24},{"line":34}],"content":["import StytchCore","import UIKit","","@UIApplicationMain","final class AppDelegate: NSObject, UIApplicationDelegate {","    ...","","    private let deeplinkCoordinator: DeeplinkCoordinator","","    override init() {","        deeplinkCoordinator = .init(handlers: [])","","        super.init()","    }","","    func application(","        _ application: UIApplication,","        continue userActivity: NSUserActivity,","        restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void","    ) -> Bool {","        \/\/ Handle universal links","        if userActivity.activityType == NSUserActivityTypeBrowsingWeb, let url = userActivity.webpageURL {","            return deeplinkCoordinator.handle(url: url)","        }","        return true","    }","","    func application(","        _ app: UIApplication,","        open url: URL,","        options: [UIApplication.OpenURLOptionsKey : Any] = [:]","    ) -> Bool {","        \/\/ Handle custom scheme deeplinks","        return deeplinkCoordinator.handle(url: url)","    }","}","","protocol DeeplinkHandler {","    func canHandle(url: URL) -> Bool","    func handle(url: URL)","}","","final class DeeplinkCoordinator {","    let handlers: [DeeplinkHandler]","","    init(handlers: [DeeplinkHandler]) {","        self.handlers = handlers","    }","","    func handle(url: URL) -> Bool {","        guard let handler = handlers.first(where: { $0.canHandle(url: url) }) else {","            return false","        }","        handler.handle(url: url)","        return true","    }","}"],"fileType":"swift","syntax":"swift","type":"file","identifier":"01-add-eml-03.swift"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/rebuild-ui-on-auth-change#Dynamically-rebuild-your-UI":{"abstract":[{"text":"Stytch provides a combine publisher to enable you to reactively set up or tear down your UI when a user logs in or out of your app.","type":"text"}],"role":"pseudoSymbol","type":"section","kind":"section","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/rebuild-ui-on-auth-change#Dynamically-rebuild-your-UI","url":"\/tutorials\/stytchcore\/rebuild-ui-on-auth-change#Dynamically-rebuild-your-UI","title":"Dynamically rebuild your UI"},"02-add-eml-03.swift":{"highlights":[{"line":5},{"line":6}],"fileName":"AuthenticationViewController.swift","fileType":"swift","identifier":"02-add-eml-03.swift","content":["import StytchCore","import UIKit","","final class AuthenticationViewController: UIViewController {","    private func sendMagicLink(to email: String) {","    }","}"],"type":"file","syntax":"swift"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/manage-sessions-manually#Update-Session-tokens-using-updatesessionTokens":{"title":"Update Session tokens using update(sessionTokens:)","url":"\/tutorials\/stytchcore\/manage-sessions-manually#Update-Session-tokens-using-updatesessionTokens","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"If the out-of-the-box sessions product doesn’t work for your needs, there are options available for manual intervention and manipulation."}],"kind":"section","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-sessions-manually#Update-Session-tokens-using-updatesessionTokens"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/manage-sessions-manually":{"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-sessions-manually","role":"project","title":"Manage Sessions manually","kind":"project","estimatedTime":"5min","url":"\/tutorials\/stytchcore\/manage-sessions-manually","type":"topic","abstract":[{"type":"text","text":"If the out-of-the-box sessions product doesn’t work for your needs, there are options available for manual intervention and manipulation."}]},"doc://stytch-ios.StytchCore/tutorials/stytch/Stytch-Basics/Getting-started":{"kind":"article","url":"\/tutorials\/stytch\/stytch-basics\/getting-started","abstract":[],"type":"topic","title":"Getting started","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch\/Stytch-Basics\/Getting-started","role":"article"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient/MagicLinks-swift.struct/Email-swift.struct/loginOrCreate(parameters:)-9n8i5":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loginOrCreate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"parameters","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:10StytchCore0A6ClientV10MagicLinksV5EmailV10ParametersV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"BasicResponse","kind":"typeIdentifier","preciseIdentifier":"s:10StytchCore13BasicResponsea"}],"title":"loginOrCreate(parameters:)","type":"topic","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient\/MagicLinks-swift.struct\/Email-swift.struct\/loginOrCreate(parameters:)-9n8i5","kind":"symbol","url":"\/documentation\/stytchcore\/stytchclient\/magiclinks-swift.struct\/email-swift.struct\/loginorcreate(parameters:)-9n8i5","abstract":[{"text":"Wraps Stytch’s email magic link ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/stytch.com\/docs\/api\/log-in-or-create-user-by-email"},{"text":" endpoint. Requests an email magic link for a user to log in or create an account depending on the presence and\/or status of an existing account.","type":"text"}],"role":"symbol"},"https://stytch.com/dashboard/redirect-urls":{"url":"https:\/\/stytch.com\/dashboard\/redirect-urls","titleInlineContent":[{"type":"text","text":"Stytch Dashboard"}],"type":"link","title":"Stytch Dashboard","identifier":"https:\/\/stytch.com\/dashboard\/redirect-urls"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/rebuild-ui-on-auth-change":{"kind":"project","estimatedTime":"5min","abstract":[{"text":"Stytch provides a combine publisher to enable you to reactively set up or tear down your UI when a user logs in or out of your app.","type":"text"}],"type":"topic","url":"\/tutorials\/stytchcore\/rebuild-ui-on-auth-change","title":"Rebuild your UI based on changes to auth status","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/rebuild-ui-on-auth-change","role":"project"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/add-oauth#Add-Sign-In-With-Apple":{"url":"\/tutorials\/stytchcore\/add-oauth#Add-Sign-In-With-Apple","abstract":[{"type":"text","text":"Using OAuth, or social logins, are a familiar and low-friction way to authenticate your users. Learn how to add them in this tutorial!"}],"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-oauth#Add-Sign-In-With-Apple","type":"section","title":"Add Sign In With Apple","role":"pseudoSymbol","kind":"section"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/add-oauth#Add-Third-Party-Identity-Providers":{"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-oauth#Add-Third-Party-Identity-Providers","url":"\/tutorials\/stytchcore\/add-oauth#Add-Third-Party-Identity-Providers","kind":"section","role":"pseudoSymbol","title":"Add Third Party Identity Providers","type":"section","abstract":[{"type":"text","text":"Using OAuth, or social logins, are a familiar and low-friction way to authenticate your users. Learn how to add them in this tutorial!"}]},"doc://stytch-ios.StytchCore/tutorials/StytchCore/initial-setup#Configure-the-StytchClient":{"abstract":[{"type":"text","text":"This tutorial will walk you through the initial process for setting up the "},{"identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"section","kind":"section","url":"\/tutorials\/stytchcore\/initial-setup#Configure-the-StytchClient","title":"Configure the StytchClient","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/initial-setup#Configure-the-StytchClient","role":"pseudoSymbol"},"https://stytch.com/docs/api/log-in-or-create-user-by-email":{"url":"https:\/\/stytch.com\/docs\/api\/log-in-or-create-user-by-email","titleInlineContent":[{"text":"login_or_create","type":"text"}],"type":"link","title":"login_or_create","identifier":"https:\/\/stytch.com\/docs\/api\/log-in-or-create-user-by-email"},"01-add-eml-04.swift":{"syntax":"swift","fileType":"swift","fileName":"AppDelegate.swift","highlights":[{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68}],"identifier":"01-add-eml-04.swift","content":["import StytchCore","import UIKit","","@UIApplicationMain","final class AppDelegate: NSObject, UIApplicationDelegate {","    ...","","    private let deeplinkCoordinator: DeeplinkCoordinator","","    override init() {","        deeplinkCoordinator = .init(handlers: [])","","        super.init()","    }","","    func application(","        _ application: UIApplication,","        continue userActivity: NSUserActivity,","        restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void","    ) -> Bool {","        \/\/ Handle universal links","        if userActivity.activityType == NSUserActivityTypeBrowsingWeb, let url = userActivity.webpageURL {","            return deeplinkCoordinator.handle(url: url)","        }","        return true","    }","","    func application(","        _ app: UIApplication,","        open url: URL,","        options: [UIApplication.OpenURLOptionsKey : Any] = [:]","    ) -> Bool {","        \/\/ Handle custom scheme deeplinks","        return deeplinkCoordinator.handle(url: url)","    }","}","","final class StytchDeeplinkHandler: DeeplinkHandler, @unchecked Sendable {","    var onSessionChange: (AuthenticateResponseType) -> Void = { _ in }","    var onResetPassword: (_ token: String) -> Void = { _ in }","","    func canHandle(url: URL) -> Bool {","        StytchClient.canHandle(url: url)","    }","","    func handle(url: URL) {","        Task {","            do {","                switch try await StytchClient.handle(url: url) {","                case let .manualHandlingRequired(tokenType, token):","                    guard case .passwordReset = tokenType else {","                        \/\/ shouldn't happen, log an error","                        return","                    }","                    onResetPassword(token)","                case let .handled(authResponse):","                    onSessionChange(authResponse)","                case .notHandled:","                    \/\/ shouldn't happen since canHandle(url:) was checked, log an error","                    break","                }","            } catch {","                \/\/ Handle errors","            }","        }","    }","}","","protocol DeeplinkHandler {","    func canHandle(url: URL) -> Bool","    func handle(url: URL)","}","","final class DeeplinkCoordinator {","    let handlers: [DeeplinkHandler]","","    init(handlers: [DeeplinkHandler]) {","        self.handlers = handlers","    }","","    func handle(url: URL) -> Bool {","        guard let handler = handlers.first(where: { $0.canHandle(url: url) }) else {","            return false","        }","        handler.handle(url: url)","        return true","    }","}"],"type":"file"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/add-biometrics#Register-and-authenticate-with-Biometrics":{"abstract":[{"type":"text","text":"Biometrics is one of the most efficient forms of authentication on mobile devices. Learn how to add it to your app here!"}],"role":"pseudoSymbol","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-biometrics#Register-and-authenticate-with-Biometrics","title":"Register and authenticate with Biometrics","url":"\/tutorials\/stytchcore\/add-biometrics#Register-and-authenticate-with-Biometrics","kind":"section","type":"section"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/add-eml#Send-an-EML":{"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-eml#Send-an-EML","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/stytchcore\/add-eml#Send-an-EML","abstract":[{"text":"Email Magic Links are a great, user-friendly way to get started using Stytch!","type":"text"}],"type":"section","title":"Send an EML"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/initial-setup#Add-Stytch-to-your-project":{"title":"Add Stytch to your project.","kind":"section","abstract":[{"type":"text","text":"This tutorial will walk you through the initial process for setting up the "},{"type":"reference","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient","isActive":true},{"type":"text","text":"."}],"role":"pseudoSymbol","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/initial-setup#Add-Stytch-to-your-project","url":"\/tutorials\/stytchcore\/initial-setup#Add-Stytch-to-your-project","type":"section"},"doc://stytch-ios.StytchCore/tutorials/stytch/Stytch-Basics/Using-more-auth-methods":{"kind":"article","type":"topic","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch\/Stytch-Basics\/Using-more-auth-methods","url":"\/tutorials\/stytch\/stytch-basics\/using-more-auth-methods","abstract":[],"role":"article","title":"Using more auth methods"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/send-tokens-in-auth-header":{"abstract":[{"text":"Many mobile applications choose to use a Bearer token header instead of cookies to inform their backend of the current user’s authentication status. This tutorial will show you how you can do this for your networking client.","type":"text"}],"title":"Send tokens in the Authorization header","estimatedTime":"5min","kind":"project","role":"project","type":"topic","url":"\/tutorials\/stytchcore\/send-tokens-in-auth-header","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/send-tokens-in-auth-header"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/manage-sessions-manually#Update-Session-tokens-via-cookies":{"type":"section","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-sessions-manually#Update-Session-tokens-via-cookies","url":"\/tutorials\/stytchcore\/manage-sessions-manually#Update-Session-tokens-via-cookies","abstract":[{"type":"text","text":"If the out-of-the-box sessions product doesn’t work for your needs, there are options available for manual intervention and manipulation."}],"title":"Update Session tokens via cookies","kind":"section","role":"pseudoSymbol"},"doc://stytch-ios.StytchCore/tutorials/stytch":{"type":"topic","role":"overview","kind":"overview","url":"\/tutorials\/stytch","title":"Stytch Tutorials","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch","abstract":[{"text":"Go from zero to fully featured authentication in your iOS app powered by Stytch","type":"text"}]},"doc://stytch-ios.StytchCore/tutorials/stytch/Intermediate-Stytch-Usage/Going-deeper":{"role":"article","kind":"article","url":"\/tutorials\/stytch\/intermediate-stytch-usage\/going-deeper","title":"Going deeper","type":"topic","abstract":[],"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch\/Intermediate-Stytch-Usage\/Going-deeper"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/send-tokens-in-auth-header#Set-up-a-Request-Interceptor":{"abstract":[{"text":"Many mobile applications choose to use a Bearer token header instead of cookies to inform their backend of the current user’s authentication status. This tutorial will show you how you can do this for your networking client.","type":"text"}],"type":"section","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/send-tokens-in-auth-header#Set-up-a-Request-Interceptor","url":"\/tutorials\/stytchcore\/send-tokens-in-auth-header#Set-up-a-Request-Interceptor","kind":"section","role":"pseudoSymbol","title":"Set up a Request Interceptor"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/add-eml":{"abstract":[{"type":"text","text":"Email Magic Links are a great, user-friendly way to get started using Stytch!"}],"url":"\/tutorials\/stytchcore\/add-eml","title":"Add Email Magic Links","role":"project","kind":"project","estimatedTime":"10min","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-eml","type":"topic"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/manage-the-current-user#Attach-new-factor-to-existing-user":{"abstract":[{"text":"This tutorial will teach you a few of the things you can do to manage Stytch users.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-the-current-user#Attach-new-factor-to-existing-user","title":"Attach new factor to existing user","url":"\/tutorials\/stytchcore\/manage-the-current-user#Attach-new-factor-to-existing-user","type":"section","kind":"section"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/manage-the-current-user#Delete-auth-factors":{"type":"section","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/manage-the-current-user#Delete-auth-factors","kind":"section","role":"pseudoSymbol","title":"Delete auth factors","abstract":[{"type":"text","text":"This tutorial will teach you a few of the things you can do to manage Stytch users."}],"url":"\/tutorials\/stytchcore\/manage-the-current-user#Delete-auth-factors"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/step-up-auth-mfa":{"kind":"project","url":"\/tutorials\/stytchcore\/step-up-auth-mfa","title":"Step up auth\/MFA","estimatedTime":"10min","role":"project","type":"topic","abstract":[{"type":"text","text":"If your app has functionality which requires higher levels of security on certain screens vs others, you may want to consider using step-up authentication or MFA. This tutorial will teach you a simple way of doing this with Stytch."}],"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/step-up-auth-mfa"},"doc://stytch-ios.StytchCore/documentation/StytchCore":{"type":"topic","title":"StytchCore","abstract":[{"type":"text","text":"Provides native iOS access to the Stytch SDK methods for ultimate flexibility."}],"role":"collection","kind":"symbol","url":"\/documentation\/stytchcore","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/step-up-auth-mfa#Confirm-the-one-time-code":{"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/step-up-auth-mfa#Confirm-the-one-time-code","url":"\/tutorials\/stytchcore\/step-up-auth-mfa#Confirm-the-one-time-code","abstract":[{"type":"text","text":"If your app has functionality which requires higher levels of security on certain screens vs others, you may want to consider using step-up authentication or MFA. This tutorial will teach you a simple way of doing this with Stytch."}],"role":"pseudoSymbol","type":"section","kind":"section","title":"Confirm the one-time-code"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/add-eml#Set-up-deeplink-handling":{"url":"\/tutorials\/stytchcore\/add-eml#Set-up-deeplink-handling","role":"pseudoSymbol","kind":"section","abstract":[{"text":"Email Magic Links are a great, user-friendly way to get started using Stytch!","type":"text"}],"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-eml#Set-up-deeplink-handling","type":"section","title":"Set up deeplink handling"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/add-oauth":{"url":"\/tutorials\/stytchcore\/add-oauth","kind":"project","title":"Add OAuth","estimatedTime":"5min","role":"project","type":"topic","abstract":[{"type":"text","text":"Using OAuth, or social logins, are a familiar and low-friction way to authenticate your users. Learn how to add them in this tutorial!"}],"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/add-oauth"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/initial-setup":{"title":"Initial setup","abstract":[{"type":"text","text":"This tutorial will walk you through the initial process for setting up the "},{"type":"reference","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient","isActive":true},{"type":"text","text":"."}],"role":"project","type":"topic","estimatedTime":"5min","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/initial-setup","kind":"project","url":"\/tutorials\/stytchcore\/initial-setup"},"doc://stytch-ios.StytchCore/tutorials/StytchCore/step-up-auth-mfa#Utilizing-a-just-in-time-second-factor":{"type":"section","role":"pseudoSymbol","url":"\/tutorials\/stytchcore\/step-up-auth-mfa#Utilizing-a-just-in-time-second-factor","abstract":[{"type":"text","text":"If your app has functionality which requires higher levels of security on certain screens vs others, you may want to consider using step-up authentication or MFA. This tutorial will teach you a simple way of doing this with Stytch."}],"identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/StytchCore\/step-up-auth-mfa#Utilizing-a-just-in-time-second-factor","kind":"section","title":"Utilizing a just-in-time second factor"},"01-add-eml-01.swift":{"identifier":"01-add-eml-01.swift","syntax":"swift","type":"file","fileName":"AppDelegate.swift","fileType":"swift","content":["import StytchCore","import UIKit","","@UIApplicationMain","final class AppDelegate: NSObject, UIApplicationDelegate {","    ...","","    override init() {","        ...","","        super.init()","    }","","    func application(","        _ application: UIApplication,","        continue userActivity: NSUserActivity,","        restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void","    ) -> Bool {","        \/\/ Handle universal links","        return true","    }","","    func application(","        _ app: UIApplication,","        open url: URL,","        options: [UIApplication.OpenURLOptionsKey : Any] = [:]","    ) -> Bool {","        \/\/ Handle custom scheme deeplinks","        return true","    }","}"],"highlights":[]},"doc://stytch-ios.StytchCore/tutorials/stytch/Advanced-Stytch/Pushing-the-limits":{"title":"Pushing the limits","role":"article","kind":"article","identifier":"doc:\/\/stytch-ios.StytchCore\/tutorials\/stytch\/Advanced-Stytch\/Pushing-the-limits","url":"\/tutorials\/stytch\/advanced-stytch\/pushing-the-limits","type":"topic","abstract":[]},"01-add-eml-05.swift":{"type":"file","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":17},{"line":19},{"line":20},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29}],"identifier":"01-add-eml-05.swift","fileName":"AppDelegate.swift","syntax":"swift","content":["import StytchCore","import UIKit","","@UIApplicationMain","final class AppDelegate: NSObject, UIApplicationDelegate {","    ...","","    private var session: Session? {","        didSet {","            \/\/ Update UI as needed","        }","    }","","    private let deeplinkCoordinator: DeeplinkCoordinator","","    override init() {","        let stytchHandler = StytchDeeplinkHandler()","","        deeplinkCoordinator = .init(handlers: [stytchHandler])","","        super.init()","","        stytchHandler.onResetPassword = { token in","            \/\/ Pass along to reset token flow","        }","","        stytchHandler.onSessionChange = { [weak self] response in","            self?.session = response.session","        }","    }","","    func application(","        _ application: UIApplication,","        continue userActivity: NSUserActivity,","        restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void","    ) -> Bool {","        \/\/ Handle universal links","        if userActivity.activityType == NSUserActivityTypeBrowsingWeb, let url = userActivity.webpageURL {","            return deeplinkCoordinator.handle(url: url)","        }","        return true","    }","","    func application(","        _ app: UIApplication,","        open url: URL,","        options: [UIApplication.OpenURLOptionsKey : Any] = [:]","    ) -> Bool {","        \/\/ Handle custom scheme deeplinks","        return deeplinkCoordinator.handle(url: url)","    }","}","","final class StytchDeeplinkHandler: DeeplinkHandler, @unchecked Sendable {","    var onSessionChange: (AuthenticateResponseType) -> Void = { _ in }","    var onResetPassword: (_ token: String) -> Void = { _ in }","","    func canHandle(url: URL) -> Bool {","        StytchClient.canHandle(url: url)","    }","","    func handle(url: URL) {","        Task {","            do {","                switch try await StytchClient.handle(url: url) {","                case let .manualHandlingRequired(tokenType, token):","                    guard case .passwordReset = tokenType else {","                        \/\/ shouldn't happen, log an error","                        return","                    }","                    onResetPassword(token)","                case let .handled(authResponse):","                    onSessionChange(authResponse)","                case .notHandled:","                    \/\/ shouldn't happen since canHandle(url:) was checked, log an error","                    break","                }","            } catch {","                \/\/ Handle errors","            }","        }","    }","}","","protocol DeeplinkHandler {","    func canHandle(url: URL) -> Bool","    func handle(url: URL)","}","","final class DeeplinkCoordinator {","    let handlers: [DeeplinkHandler]","","    init(handlers: [DeeplinkHandler]) {","        self.handlers = handlers","    }","","    func handle(url: URL) -> Bool {","        guard let handler = handlers.first(where: { $0.canHandle(url: url) }) else {","            return false","        }","        handler.handle(url: url)","        return true","    }","}"],"fileType":"swift"},"02-add-eml-02.swift":{"highlights":[{"line":1}],"fileName":"AuthenticationViewController.swift","identifier":"02-add-eml-02.swift","syntax":"swift","content":["import StytchCore","import UIKit","","final class AuthenticationViewController: UIViewController {","}"],"fileType":"swift","type":"file"},"02-add-eml-05.swift":{"syntax":"swift","content":["import StytchCore","import UIKit","","final class AuthenticationViewController: UIViewController {","    private func sendMagicLink(to email: String) {","        Task {","            do {","                _ = try await StytchClient.magicLinks.email.loginOrCreate(parameters: .init(email: email))","                alertUserToCheckEmail()","            } catch {}","        }","    }","}"],"fileType":"swift","highlights":[{"line":9}],"type":"file","fileName":"AuthenticationViewController.swift","identifier":"02-add-eml-05.swift"},"doc://stytch-ios.StytchCore/documentation/StytchCore/StytchClient":{"abstract":[{"type":"text","text":"The entrypoint for all Stytch-related interaction."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"StytchClient","kind":"identifier"}],"title":"StytchClient","identifier":"doc:\/\/stytch-ios.StytchCore\/documentation\/StytchCore\/StytchClient","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StytchClient","kind":"identifier"}],"url":"\/documentation\/stytchcore\/stytchclient"},"02-add-eml-01.swift":{"identifier":"02-add-eml-01.swift","syntax":"swift","type":"file","fileName":"AuthenticationViewController.swift","fileType":"swift","content":["import UIKit","","final class AuthenticationViewController: UIViewController {","}"],"highlights":[]},"01-add-eml-02.swift":{"syntax":"swift","fileType":"swift","fileName":"AppDelegate.swift","highlights":[{"line":8},{"line":9},{"line":11},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54}],"identifier":"01-add-eml-02.swift","content":["import StytchCore","import UIKit","","@UIApplicationMain","final class AppDelegate: NSObject, UIApplicationDelegate {","    ...","","    private let deeplinkCoordinator: DeeplinkCoordinator","","    override init() {","        deeplinkCoordinator = .init(handlers: [])","","        super.init()","    }","","    func application(","        _ application: UIApplication,","        continue userActivity: NSUserActivity,","        restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void","    ) -> Bool {","        \/\/ Handle universal links","        return true","    }","","    func application(","        _ app: UIApplication,","        open url: URL,","        options: [UIApplication.OpenURLOptionsKey : Any] = [:]","    ) -> Bool {","        \/\/ Handle custom scheme deeplinks","        return true","    }","}","","protocol DeeplinkHandler {","    func canHandle(url: URL) -> Bool","    func handle(url: URL)","}","","final class DeeplinkCoordinator {","    let handlers: [DeeplinkHandler]","","    init(handlers: [DeeplinkHandler]) {","        self.handlers = handlers","    }","","    func handle(url: URL) -> Bool {","        guard let handler = handlers.first(where: { $0.canHandle(url: url) }) else {","            return false","        }","        handler.handle(url: url)","        return true","    }","}"],"type":"file"}}}